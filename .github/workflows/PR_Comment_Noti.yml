name: Discord Notification on PR Comment

on:
  issue_comment:
    types: [created, edited]
  workflow_dispatch:
    inputs:
      comment_body:
        description: 'PR 코멘트의 내용'
        required: true
        default: '테스트를 위한 PR 코멘트 내용의 예시입니다.'
      pr_url:
        description: 'PR URL'
        required: true
        default: 'https://github.com/debate-timer/debate-timer-fe/pull/216#discussion_r2024354733'
      author_name:
        description: '작성자 이름'
        required: true
        default: '테스트 작성자'
      author_url:
        description: '작성자 링크'
        required: true
        default: 'http://www.naver.com'
      pr_title:
        description: 'PR 제목'
        required: true
        default: '[TEST] 테스트용 가짜 PR'

jobs:
  notify-discord-comment:
    # Have to insert codes that checks whether this is PR comment
    runs-on: ubuntu-latest

    steps:
      - name: Debug All Event Data
        run: echo '${{ toJson(github.event) }}'

      - name: Set Environment Variables
        run: |
          echo "AVATAR_URL=${{ secrets.DISCORD_AVATAR_URL }}" >> $GITHUB_ENV
          echo "USERNAME=망곰" >> $GITHUB_ENV
          echo "CONTENT=새로운 PR 댓글이 달렸어요!" >> $GITHUB_ENV
          echo "WEB_HOOK=${{ secrets.DISCORD_WEB_HOOK }}" >> $GITHUB_ENV

      - name: Notify Discord
        env:
          # AUTHOR_NAME: ${{ github.event.comment.user.login }}
          # PR_URL: ${{ github.event.issue.pull_request.html_url }}
          # PR_TITLE: ${{ github.event.issue.title }}
          # COMMENT_BODY: ${{ github.event.comment.body }}
          AUTHOR_NAME: ${{ github.event.inputs.author_name }}
          PR_URL: ${{ github.event.inputs.pr_url }}
          PR_TITLE: ${{ github.event.inputs.pr_title }}
          AUTHOR_URL: ${{ github.event.comment.user.avatar_url }}
          COMMENT_BODY: ${{ github.event.inputs.comment_body }}
          AVATAR_URL: ${{ env.AVATAR_URL }}
          USERNAME: ${{ env.USERNAME }}
          WEB_HOOK: ${{ env.WEB_HOOK }}
          CONTENT: ${{ env.CONTENT }}
        run: |
          if [ -n "$WEB_HOOK" ]; then
            JSON_PAYLOAD=$(jq -n \
              --arg content "$CONTENT" \
              --arg comment_body "$COMMENT_BODY" \
              --arg username "$USERNAME" \
              --arg avatar_url "$AVATAR_URL" \
              --arg pr_title "$PR_TITLE" \
              --arg pr_url "$PR_URL" \
              --arg author_url "$AUTHOR_URL" \
              --arg author_name "$AUTHOR_NAME" \
              --arg color "5814783" \
              --arg timestamp "$(date -u +"%Y-%m-%dT%H:%M:%SZ")" \
              '{
                username: $username,
                avatar_url: $avatar_url,
                content: $content,
                embeds: [{
                  title: $pr_title,
                  url: $pr_url,
                  author: {
                    name: $author_name,
                    icon_url: $author_url
                  },
                  description: $comment_body,
                  color: ($color | tonumber),
                  timestamp: $timestamp
                }]
              }')

            curl -X POST -H "Content-Type: application/json" -d "$JSON_PAYLOAD" "$WEB_HOOK"
          else
            echo "No matching title found. Skipping notification."
          fi
